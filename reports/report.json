{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 12,
    "pending": 0,
    "failures": 2,
    "start": "2021-12-06T15:58:23.242Z",
    "end": "2021-12-06T15:58:36.673Z",
    "duration": 13150,
    "testsRegistered": 14,
    "passPercent": 85.71428571428571,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bfcfedda-58de-49bf-91bc-cfd72258625b",
      "title": "",
      "fullFile": "cypress/integration/jsEmployeesTableDOM.spec.js",
      "file": "cypress/integration/jsEmployeesTableDOM.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6de59291-a259-4508-b923-656891d08da0",
          "title": "Employees table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sort by name ASC",
              "fullTitle": "Employees table should sort by name ASC",
              "timedOut": null,
              "duration": 444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').click();\ncy.checkValuesSorted('Name', 'ASC');",
              "err": {},
              "uuid": "48a66800-37aa-4bb4-b741-8d5b568d6457",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by name DESC",
              "fullTitle": "Employees table should sort by name DESC",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').dblclick();\ncy.checkValuesSorted('Name', 'DESC');",
              "err": {},
              "uuid": "12c1d819-fc41-4363-9a4d-d1d983549d33",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age ASC",
              "fullTitle": "Employees table should sort by age ASC",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').click();\ncy.checkValuesSorted('Age', 'ASC');",
              "err": {},
              "uuid": "cc4d436a-975e-4c6a-a048-c73bd2a4a73e",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age DESC",
              "fullTitle": "Employees table should sort by age DESC",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').dblclick();\ncy.checkValuesSorted('Age', 'DESC');",
              "err": {},
              "uuid": "bf857bf5-4457-4c75-a7b3-3afbdd34e0b0",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary ASC",
              "fullTitle": "Employees table should sort by salary ASC",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').click();\ncy.checkValuesSorted('Salary', 'ASC');",
              "err": {},
              "uuid": "d67d4ef6-a9e4-41c4-acb2-dc2673ad2746",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary DESC",
              "fullTitle": "Employees table should sort by salary DESC",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').dblclick();\ncy.checkValuesSorted('Salary', 'DESC');",
              "err": {},
              "uuid": "baa15826-36ea-40fc-8c38-0ee0dcbf7d3f",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting ASC",
              "fullTitle": "Employees table should have proper values in rows after the sorting ASC",
              "timedOut": null,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').click();\ncy.compareRowValuesAfterSort('Airi Satou', ['Airi Satou', 'Accountant', 'Tokyo', '33', '$162,700']);",
              "err": {},
              "uuid": "6db176d0-d51e-41d6-bb2c-9cd6f3a4ea68",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting DESC",
              "fullTitle": "Employees table should have proper values in rows after the sorting DESC",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').dblclick();\ncy.compareRowValuesAfterSort('Zorita Serrano', ['Zorita Serrano', 'Software Engineer', 'San Francisco', '56', '$115,000']);",
              "err": {},
              "uuid": "6c64bc8b-be02-4fba-b8e9-09e6f0dbd553",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "row should have class active after click",
              "fullTitle": "Employees table row should have class active after click",
              "timedOut": null,
              "duration": 4450,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.contains('Airi Satou').parent().should('not.have.class', 'active');\ncy.contains('Airi Satou').click();\ncy.contains('Airi Satou').parent().should('have.class', 'active');",
              "err": {
                "message": "AssertionError: Timed out retrying: expected '<tr>' to have class 'active'",
                "estack": "AssertionError: Timed out retrying: expected '<tr>' to have class 'active'\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress/integration/jsEmployeesTableDOM.spec.js:328:40)",
                "diff": null
              },
              "uuid": "4fdeb5b8-dadf-4047-ab55-3417014d67f7",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to add a new employee",
              "fullTitle": "Employees table should be able to add a new employee",
              "timedOut": null,
              "duration": 1385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'success');\ncy.compareRowValuesAfterSort('Adam', ['Adam', 'QA Engineer', 'San Francisco', '18', '$50,000']);",
              "err": {},
              "uuid": "f9fe8724-d2e3-484f-b215-1824b52772fc",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on name field\n   with invalid input",
              "fullTitle": "Employees table should have warning notification on name field\n   with invalid input",
              "timedOut": null,
              "duration": 1489,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Ada', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Ada', 50000);",
              "err": {
                "message": "CypressError: Cypress detected a cross origin error happened on page load:\n\n  > Blocked a frame with origin \"http://localhost:8080\" from accessing a cross-origin frame.\n\nBefore the page load, you were bound to the origin policy:\n\n  > http://localhost:8080\n\nA cross origin error happens when your application navigates to a new URL which does not match the origin policy above.\n\nA new URL does not match the origin policy if the 'protocol', 'port' (if specified), and/or 'host' (unless of the same superdomain) are different.\n\nCypress does not allow you to navigate to a different origin URL within a single test.\n\nYou may need to restructure some of your test code to avoid this problem.\n\nAlternatively you can also disable Chrome Web Security in Chromium-based browsers which will turn off this restriction by setting { chromeWebSecurity: false } in `cypress.json`.\n\nhttps://on.cypress.io/cross-origin-violation",
                "estack": "CypressError: Cypress detected a cross origin error happened on page load:\n\n  > Blocked a frame with origin \"http://localhost:8080\" from accessing a cross-origin frame.\n\nBefore the page load, you were bound to the origin policy:\n\n  > http://localhost:8080\n\nA cross origin error happens when your application navigates to a new URL which does not match the origin policy above.\n\nA new URL does not match the origin policy if the 'protocol', 'port' (if specified), and/or 'host' (unless of the same superdomain) are different.\n\nCypress does not allow you to navigate to a different origin URL within a single test.\n\nYou may need to restructure some of your test code to avoid this problem.\n\nAlternatively you can also disable Chrome Web Security in Chromium-based browsers which will turn off this restriction by setting { chromeWebSecurity: false } in `cypress.json`.\n\nhttps://on.cypress.io/cross-origin-violation\n    at onPageLoadErr (http://localhost:8080/__cypress/runner/cypress_runner.js:157078:17)\n    at HTMLIFrameElement.<anonymous> (http://localhost:8080/__cypress/runner/cypress_runner.js:169962:17)\n    at HTMLIFrameElement.dispatch (http://localhost:8080/__cypress/runner/cypress_runner.js:91166:27)\n    at HTMLIFrameElement.elemData.handle (http://localhost:8080/__cypress/runner/cypress_runner.js:90974:28)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress/integration/jsEmployeesTableDOM.spec.js:239:46)",
                "diff": null
              },
              "uuid": "94173aec-f923-4657-add6-474568e20179",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on position \n  field with invalid input",
              "fullTitle": "Employees table should have warning notification on position \n  field with invalid input",
              "timedOut": null,
              "duration": 1004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-qa=\"name\"]').type('Adam');\ncy.get('[data-qa=\"office\"]').select('San Francisco');\ncy.get('[data-qa=\"age\"]').type('18{enter}');\ncy.get('[data-qa=\"salary\"]').type('50000{enter}');\ncy.get('button').contains('Save to table').click();\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "ad5d87af-4051-4a0c-9a61-247a1d262276",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age less than 18",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age less than 18",
              "timedOut": null,
              "duration": 1365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 17, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "ec82cebe-d802-4c7b-97b8-b3703defc18e",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age bigger than 90",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age bigger than 90",
              "timedOut": null,
              "duration": 1188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 91, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "0e536409-2850-44de-8dc8-c18432ff3809",
              "parentUUID": "6de59291-a259-4508-b923-656891d08da0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48a66800-37aa-4bb4-b741-8d5b568d6457",
            "12c1d819-fc41-4363-9a4d-d1d983549d33",
            "cc4d436a-975e-4c6a-a048-c73bd2a4a73e",
            "bf857bf5-4457-4c75-a7b3-3afbdd34e0b0",
            "d67d4ef6-a9e4-41c4-acb2-dc2673ad2746",
            "baa15826-36ea-40fc-8c38-0ee0dcbf7d3f",
            "6db176d0-d51e-41d6-bb2c-9cd6f3a4ea68",
            "6c64bc8b-be02-4fba-b8e9-09e6f0dbd553",
            "f9fe8724-d2e3-484f-b215-1824b52772fc",
            "ad5d87af-4051-4a0c-9a61-247a1d262276",
            "ec82cebe-d802-4c7b-97b8-b3703defc18e",
            "0e536409-2850-44de-8dc8-c18432ff3809"
          ],
          "failures": [
            "4fdeb5b8-dadf-4047-ab55-3417014d67f7",
            "94173aec-f923-4657-add6-474568e20179"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13150,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}