{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 10,
    "pending": 0,
    "failures": 4,
    "start": "2024-01-28T18:17:53.403Z",
    "end": "2024-01-28T18:18:05.672Z",
    "duration": 12109,
    "testsRegistered": 14,
    "passPercent": 71.42857142857143,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2f905226-fd47-465a-be81-faa068101b26",
      "title": "",
      "fullFile": "cypress/integration/jsEmployeesTableDOM.spec.js",
      "file": "cypress/integration/jsEmployeesTableDOM.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
          "title": "Employees table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sort by name ASC",
              "fullTitle": "Employees table should sort by name ASC",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').click();\ncy.checkValuesSorted('Name', 'ASC');",
              "err": {},
              "uuid": "6a8f9915-5e12-4d08-b135-c6bb808a077f",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by name DESC",
              "fullTitle": "Employees table should sort by name DESC",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').dblclick();\ncy.checkValuesSorted('Name', 'DESC');",
              "err": {},
              "uuid": "d3133fd4-c1d1-4139-bc93-b11a25c28354",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age ASC",
              "fullTitle": "Employees table should sort by age ASC",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').click();\ncy.checkValuesSorted('Age', 'ASC');",
              "err": {},
              "uuid": "90d2d212-9e44-4c91-ac9d-fa13e21cbc77",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age DESC",
              "fullTitle": "Employees table should sort by age DESC",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').dblclick();\ncy.checkValuesSorted('Age', 'DESC');",
              "err": {},
              "uuid": "5bd5db5f-8820-4941-8f60-0c966f7824e4",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary ASC",
              "fullTitle": "Employees table should sort by salary ASC",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').click();\ncy.checkValuesSorted('Salary', 'ASC');",
              "err": {},
              "uuid": "a725ea3b-0174-4f5d-9127-869aacaef005",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary DESC",
              "fullTitle": "Employees table should sort by salary DESC",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').dblclick();\ncy.checkValuesSorted('Salary', 'DESC');",
              "err": {},
              "uuid": "8327ce15-4928-4e9e-9283-3b02dd2baa71",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting ASC",
              "fullTitle": "Employees table should have proper values in rows after the sorting ASC",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').click();\ncy.compareRowValuesAfterSort('Airi Satou', ['Airi Satou', 'Accountant', 'Tokyo', '33', '$162,700']);",
              "err": {},
              "uuid": "a74fd1f8-09c8-4edf-8410-c9f45b2a91a1",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting DESC",
              "fullTitle": "Employees table should have proper values in rows after the sorting DESC",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').dblclick();\ncy.compareRowValuesAfterSort('Zorita Serrano', ['Zorita Serrano', 'Software Engineer', 'San Francisco', '56', '$115,000']);",
              "err": {},
              "uuid": "91bb1af7-5744-4753-b057-fca4b3484835",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "row should have class active after click",
              "fullTitle": "Employees table row should have class active after click",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Airi Satou').parent().should('not.have.class', 'active');\ncy.contains('Airi Satou').click();\ncy.contains('Airi Satou').parent().should('have.class', 'active');",
              "err": {},
              "uuid": "af59f52b-bc20-4b7e-8463-0a9fb38400a3",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to add a new employee",
              "fullTitle": "Employees table should be able to add a new employee",
              "timedOut": null,
              "duration": 1107,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'success');\ncy.compareRowValuesAfterSort('Adam', ['Adam', 'QA Engineer', 'San Francisco', '18', '$50,000']);",
              "err": {},
              "uuid": "77d33a22-33fb-41e8-b238-81d8bda18627",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on name field\n   with invalid input",
              "fullTitle": "Employees table should have warning notification on name field\n   with invalid input",
              "timedOut": null,
              "duration": 1380,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Ada', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Ada', 50000);",
              "err": {
                "message": "CypressError: Cypress detected a cross origin error happened on page load:\n\n  > Blocked a frame with origin \"http://localhost:8080\" from accessing a cross-origin frame.\n\nBefore the page load, you were bound to the origin policy:\n\n  > http://localhost:8080\n\nA cross origin error happens when your application navigates to a new URL which does not match the origin policy above.\n\nA new URL does not match the origin policy if the 'protocol', 'port' (if specified), and/or 'host' (unless of the same superdomain) are different.\n\nCypress does not allow you to navigate to a different origin URL within a single test.\n\nYou may need to restructure some of your test code to avoid this problem.\n\nAlternatively you can also disable Chrome Web Security in Chromium-based browsers which will turn off this restriction by setting { chromeWebSecurity: false } in `cypress.json`.\n\nhttps://on.cypress.io/cross-origin-violation",
                "estack": "CypressError: Cypress detected a cross origin error happened on page load:\n\n  > Blocked a frame with origin \"http://localhost:8080\" from accessing a cross-origin frame.\n\nBefore the page load, you were bound to the origin policy:\n\n  > http://localhost:8080\n\nA cross origin error happens when your application navigates to a new URL which does not match the origin policy above.\n\nA new URL does not match the origin policy if the 'protocol', 'port' (if specified), and/or 'host' (unless of the same superdomain) are different.\n\nCypress does not allow you to navigate to a different origin URL within a single test.\n\nYou may need to restructure some of your test code to avoid this problem.\n\nAlternatively you can also disable Chrome Web Security in Chromium-based browsers which will turn off this restriction by setting { chromeWebSecurity: false } in `cypress.json`.\n\nhttps://on.cypress.io/cross-origin-violation\n    at onPageLoadErr (http://localhost:8080/__cypress/runner/cypress_runner.js:162722:76)\n    at HTMLIFrameElement.<anonymous> (http://localhost:8080/__cypress/runner/cypress_runner.js:178345:15)\n    at HTMLIFrameElement.dispatch (http://localhost:8080/__cypress/runner/cypress_runner.js:117089:27)\n    at HTMLIFrameElement.elemData.handle (http://localhost:8080/__cypress/runner/cypress_runner.js:116897:28)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsEmployeesTableDOM.spec.js:105:46)",
                "diff": null
              },
              "uuid": "6195b7a2-d45b-4c19-b503-1923c60ee567",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on position \n  field with invalid input",
              "fullTitle": "Employees table should have warning notification on position \n  field with invalid input",
              "timedOut": null,
              "duration": 5189,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-qa=\"name\"]').type('Adam');\ncy.get('[data-qa=\"office\"]').select('San Francisco');\ncy.get('[data-qa=\"age\"]').type('18{enter}');\ncy.get('[data-qa=\"salary\"]').type('50000{enter}');\ncy.get('button').contains('Save to table').click();\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected not to find content: 'Adam' within the element: <tbody> but continuously found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected not to find content: 'Adam' within the element: <tbody> but continuously found it.\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsEmployeesTableDOM.spec.js:108:38)",
                "diff": null
              },
              "uuid": "c55ea9b4-90c6-4a57-ab3f-39960cb5db98",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age less than 18",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age less than 18",
              "timedOut": null,
              "duration": 1302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 17, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {
                "message": "CypressError: Cypress detected a cross origin error happened on page load:\n\n  > Blocked a frame with origin \"http://localhost:8080\" from accessing a cross-origin frame.\n\nBefore the page load, you were bound to the origin policy:\n\n  > http://localhost:8080\n\nA cross origin error happens when your application navigates to a new URL which does not match the origin policy above.\n\nA new URL does not match the origin policy if the 'protocol', 'port' (if specified), and/or 'host' (unless of the same superdomain) are different.\n\nCypress does not allow you to navigate to a different origin URL within a single test.\n\nYou may need to restructure some of your test code to avoid this problem.\n\nAlternatively you can also disable Chrome Web Security in Chromium-based browsers which will turn off this restriction by setting { chromeWebSecurity: false } in `cypress.json`.\n\nhttps://on.cypress.io/cross-origin-violation",
                "estack": "CypressError: Cypress detected a cross origin error happened on page load:\n\n  > Blocked a frame with origin \"http://localhost:8080\" from accessing a cross-origin frame.\n\nBefore the page load, you were bound to the origin policy:\n\n  > http://localhost:8080\n\nA cross origin error happens when your application navigates to a new URL which does not match the origin policy above.\n\nA new URL does not match the origin policy if the 'protocol', 'port' (if specified), and/or 'host' (unless of the same superdomain) are different.\n\nCypress does not allow you to navigate to a different origin URL within a single test.\n\nYou may need to restructure some of your test code to avoid this problem.\n\nAlternatively you can also disable Chrome Web Security in Chromium-based browsers which will turn off this restriction by setting { chromeWebSecurity: false } in `cypress.json`.\n\nhttps://on.cypress.io/cross-origin-violation\n    at onPageLoadErr (http://localhost:8080/__cypress/runner/cypress_runner.js:162722:76)\n    at HTMLIFrameElement.<anonymous> (http://localhost:8080/__cypress/runner/cypress_runner.js:178345:15)\n    at HTMLIFrameElement.dispatch (http://localhost:8080/__cypress/runner/cypress_runner.js:117089:27)\n    at HTMLIFrameElement.elemData.handle (http://localhost:8080/__cypress/runner/cypress_runner.js:116897:28)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsEmployeesTableDOM.spec.js:105:46)",
                "diff": null
              },
              "uuid": "368218c5-2b39-40ae-bd8c-6438949b01a1",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age bigger than 90",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age bigger than 90",
              "timedOut": null,
              "duration": 1323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 91, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {
                "message": "CypressError: Cypress detected a cross origin error happened on page load:\n\n  > Blocked a frame with origin \"http://localhost:8080\" from accessing a cross-origin frame.\n\nBefore the page load, you were bound to the origin policy:\n\n  > http://localhost:8080\n\nA cross origin error happens when your application navigates to a new URL which does not match the origin policy above.\n\nA new URL does not match the origin policy if the 'protocol', 'port' (if specified), and/or 'host' (unless of the same superdomain) are different.\n\nCypress does not allow you to navigate to a different origin URL within a single test.\n\nYou may need to restructure some of your test code to avoid this problem.\n\nAlternatively you can also disable Chrome Web Security in Chromium-based browsers which will turn off this restriction by setting { chromeWebSecurity: false } in `cypress.json`.\n\nhttps://on.cypress.io/cross-origin-violation",
                "estack": "CypressError: Cypress detected a cross origin error happened on page load:\n\n  > Blocked a frame with origin \"http://localhost:8080\" from accessing a cross-origin frame.\n\nBefore the page load, you were bound to the origin policy:\n\n  > http://localhost:8080\n\nA cross origin error happens when your application navigates to a new URL which does not match the origin policy above.\n\nA new URL does not match the origin policy if the 'protocol', 'port' (if specified), and/or 'host' (unless of the same superdomain) are different.\n\nCypress does not allow you to navigate to a different origin URL within a single test.\n\nYou may need to restructure some of your test code to avoid this problem.\n\nAlternatively you can also disable Chrome Web Security in Chromium-based browsers which will turn off this restriction by setting { chromeWebSecurity: false } in `cypress.json`.\n\nhttps://on.cypress.io/cross-origin-violation\n    at onPageLoadErr (http://localhost:8080/__cypress/runner/cypress_runner.js:162722:76)\n    at HTMLIFrameElement.<anonymous> (http://localhost:8080/__cypress/runner/cypress_runner.js:178345:15)\n    at HTMLIFrameElement.dispatch (http://localhost:8080/__cypress/runner/cypress_runner.js:117089:27)\n    at HTMLIFrameElement.elemData.handle (http://localhost:8080/__cypress/runner/cypress_runner.js:116897:28)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsEmployeesTableDOM.spec.js:105:46)",
                "diff": null
              },
              "uuid": "822b3ade-96a0-40e9-a0d6-aa0338a2d068",
              "parentUUID": "c2ea4b0b-0a32-4270-a26a-c1c480dea5de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a8f9915-5e12-4d08-b135-c6bb808a077f",
            "d3133fd4-c1d1-4139-bc93-b11a25c28354",
            "90d2d212-9e44-4c91-ac9d-fa13e21cbc77",
            "5bd5db5f-8820-4941-8f60-0c966f7824e4",
            "a725ea3b-0174-4f5d-9127-869aacaef005",
            "8327ce15-4928-4e9e-9283-3b02dd2baa71",
            "a74fd1f8-09c8-4edf-8410-c9f45b2a91a1",
            "91bb1af7-5744-4753-b057-fca4b3484835",
            "af59f52b-bc20-4b7e-8463-0a9fb38400a3",
            "77d33a22-33fb-41e8-b238-81d8bda18627"
          ],
          "failures": [
            "6195b7a2-d45b-4c19-b503-1923c60ee567",
            "c55ea9b4-90c6-4a57-ab3f-39960cb5db98",
            "368218c5-2b39-40ae-bd8c-6438949b01a1",
            "822b3ade-96a0-40e9-a0d6-aa0338a2d068"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}