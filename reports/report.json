{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 13,
    "pending": 0,
    "failures": 1,
    "start": "2021-03-11T14:12:59.456Z",
    "end": "2021-03-11T14:13:11.851Z",
    "duration": 12227,
    "testsRegistered": 14,
    "passPercent": 92.85714285714286,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e68c1498-8bbe-4211-a19d-c2f1fac674b6",
      "title": "",
      "fullFile": "cypress\\integration\\jsEmployeesTableDOM.spec.js",
      "file": "cypress\\integration\\jsEmployeesTableDOM.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a99d877-9107-4aad-85d4-09211b82f87c",
          "title": "Employees table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sort by name ASC",
              "fullTitle": "Employees table should sort by name ASC",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').click();\ncy.checkValuesSorted('Name', 'ASC');",
              "err": {},
              "uuid": "9dd1f69e-1eaf-4763-b80e-a1b49d81687d",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by name DESC",
              "fullTitle": "Employees table should sort by name DESC",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').dblclick();\ncy.checkValuesSorted('Name', 'DESC');",
              "err": {},
              "uuid": "c8e762dc-1e26-464b-ad01-be5790bf6685",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age ASC",
              "fullTitle": "Employees table should sort by age ASC",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').click();\ncy.checkValuesSorted('Age', 'ASC');",
              "err": {},
              "uuid": "c60b1fd6-aa52-467d-ac1b-764165eefa8b",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age DESC",
              "fullTitle": "Employees table should sort by age DESC",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').dblclick();\ncy.checkValuesSorted('Age', 'DESC');",
              "err": {},
              "uuid": "1552e5cf-750d-473b-bccf-4ace0a744708",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary ASC",
              "fullTitle": "Employees table should sort by salary ASC",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').click();\ncy.checkValuesSorted('Salary', 'ASC');",
              "err": {},
              "uuid": "8049322b-55de-4fa7-9bc0-e6382f2b2432",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary DESC",
              "fullTitle": "Employees table should sort by salary DESC",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').dblclick();\ncy.checkValuesSorted('Salary', 'DESC');",
              "err": {},
              "uuid": "ad02b4f1-4bf0-4f26-bf96-c8745bc323c6",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting ASC",
              "fullTitle": "Employees table should have proper values in rows after the sorting ASC",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').click();\ncy.compareRowValuesAfterSort('Airi Satou', ['Airi Satou', 'Accountant', 'Tokyo', '33', '$162,700']);",
              "err": {},
              "uuid": "04695b87-7684-4df9-a310-cfc85dce5d82",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting DESC",
              "fullTitle": "Employees table should have proper values in rows after the sorting DESC",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').dblclick();\ncy.compareRowValuesAfterSort('Zorita Serrano', ['Zorita Serrano', 'Software Engineer', 'San Francisco', '56', '$115,000']);",
              "err": {},
              "uuid": "7ad6ec72-e1a8-474a-b58f-357970fbb369",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "row should have class active after click",
              "fullTitle": "Employees table row should have class active after click",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Airi Satou').parent().should('not.have.class', 'active');\ncy.contains('Airi Satou').click();\ncy.contains('Airi Satou').parent().should('have.class', 'active');",
              "err": {},
              "uuid": "48c4ad28-58a7-4762-8c59-4cbae54fb054",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to add a new employee",
              "fullTitle": "Employees table should be able to add a new employee",
              "timedOut": null,
              "duration": 1196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'success');\ncy.compareRowValuesAfterSort('Adam', ['Adam', 'QA Engineer', 'San Francisco', '18', '$50,000']);",
              "err": {},
              "uuid": "482fd393-592f-47fb-ab68-bbac7e06f3aa",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on name field\n   with invalid input",
              "fullTitle": "Employees table should have warning notification on name field\n   with invalid input",
              "timedOut": null,
              "duration": 1168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Ada', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Ada', 50000);",
              "err": {},
              "uuid": "105685c6-f65c-4c05-b04b-3d129f32c33d",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on position \n  field with invalid input",
              "fullTitle": "Employees table should have warning notification on position \n  field with invalid input",
              "timedOut": null,
              "duration": 5276,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-qa=\"name\"]').type('Adam');\ncy.get('[data-qa=\"office\"]').select('San Francisco');\ncy.get('[data-qa=\"age\"]').type('18{enter}');\ncy.get('[data-qa=\"salary\"]').type('50000{enter}');\ncy.get('button').contains('Save to table').click();\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {
                "message": "CypressError: Timed out retrying: `cy.click()` failed because this element:\n\n`<button type=\"submit\">Save to...</button>`\n\nis being covered by another element:\n\n`<p>error</p>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: `cy.click()` failed because this element:\n\n`<button type=\"submit\">Save to...</button>`\n\nis being covered by another element:\n\n`<p>error</p>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at $Cy.ensureDescendents (http://localhost:8080/__cypress/runner/cypress_runner.js:161307:26)\n    at ensureDescendents (http://localhost:8080/__cypress/runner/cypress_runner.js:149871:8)\n    at ensureDescendentsAndScroll (http://localhost:8080/__cypress/runner/cypress_runner.js:149878:14)\n    at ensureElIsNotCovered (http://localhost:8080/__cypress/runner/cypress_runner.js:150007:5)\n    at runAllChecks (http://localhost:8080/__cypress/runner/cypress_runner.js:150148:52)\n    at retryActionability (http://localhost:8080/__cypress/runner/cypress_runner.js:150163:16)\n    at tryCatcher (http://localhost:8080/__cypress/runner/cypress_runner.js:10325:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:8080/__cypress/runner/cypress_runner.js:7599:29)\n    at tryFn (http://localhost:8080/__cypress/runner/cypress_runner.js:165556:21)\n    at whenStable (http://localhost:8080/__cypress/runner/cypress_runner.js:165594:12)\n    at http://localhost:8080/__cypress/runner/cypress_runner.js:165089:16\n    at tryCatcher (http://localhost:8080/__cypress/runner/cypress_runner.js:10325:23)\n    at Promise._settlePromiseFromHandler (http://localhost:8080/__cypress/runner/cypress_runner.js:8260:31)\n    at Promise._settlePromise (http://localhost:8080/__cypress/runner/cypress_runner.js:8317:18)\n    at Promise._settlePromise0 (http://localhost:8080/__cypress/runner/cypress_runner.js:8362:10)\n    at Promise._settlePromises (http://localhost:8080/__cypress/runner/cypress_runner.js:8442:18)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsEmployeesTableDOM.spec.js:345:48)",
                "diff": null
              },
              "uuid": "d8bea138-6ffc-4db8-a0b9-93275c2c248d",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age less than 18",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age less than 18",
              "timedOut": null,
              "duration": 1452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 17, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "4dd1108c-9e50-4899-a090-826c40712f1a",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age bigger than 90",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age bigger than 90",
              "timedOut": null,
              "duration": 1149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 91, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "e9967885-ec5a-464b-ab8e-144f0b27127b",
              "parentUUID": "9a99d877-9107-4aad-85d4-09211b82f87c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9dd1f69e-1eaf-4763-b80e-a1b49d81687d",
            "c8e762dc-1e26-464b-ad01-be5790bf6685",
            "c60b1fd6-aa52-467d-ac1b-764165eefa8b",
            "1552e5cf-750d-473b-bccf-4ace0a744708",
            "8049322b-55de-4fa7-9bc0-e6382f2b2432",
            "ad02b4f1-4bf0-4f26-bf96-c8745bc323c6",
            "04695b87-7684-4df9-a310-cfc85dce5d82",
            "7ad6ec72-e1a8-474a-b58f-357970fbb369",
            "48c4ad28-58a7-4762-8c59-4cbae54fb054",
            "482fd393-592f-47fb-ab68-bbac7e06f3aa",
            "105685c6-f65c-4c05-b04b-3d129f32c33d",
            "4dd1108c-9e50-4899-a090-826c40712f1a",
            "e9967885-ec5a-464b-ab8e-144f0b27127b"
          ],
          "failures": [
            "d8bea138-6ffc-4db8-a0b9-93275c2c248d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12227,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}