{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 13,
    "pending": 0,
    "failures": 1,
    "start": "2021-03-11T14:10:54.665Z",
    "end": "2021-03-11T14:11:07.819Z",
    "duration": 12928,
    "testsRegistered": 14,
    "passPercent": 92.85714285714286,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a8129d7f-e40a-4dd7-acc9-4456b1c2d9d8",
      "title": "",
      "fullFile": "cypress\\integration\\jsEmployeesTableDOM.spec.js",
      "file": "cypress\\integration\\jsEmployeesTableDOM.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "253b60e1-95f0-401e-a296-bede9da948c3",
          "title": "Employees table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sort by name ASC",
              "fullTitle": "Employees table should sort by name ASC",
              "timedOut": null,
              "duration": 418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').click();\ncy.checkValuesSorted('Name', 'ASC');",
              "err": {},
              "uuid": "b27fa0c7-230e-4292-a032-40676c809e49",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by name DESC",
              "fullTitle": "Employees table should sort by name DESC",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').dblclick();\ncy.checkValuesSorted('Name', 'DESC');",
              "err": {},
              "uuid": "b934e2d9-dd32-40bc-b393-27dd28acecde",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age ASC",
              "fullTitle": "Employees table should sort by age ASC",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').click();\ncy.checkValuesSorted('Age', 'ASC');",
              "err": {},
              "uuid": "30532bec-4ccb-45c5-ae67-020056fd5fe0",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age DESC",
              "fullTitle": "Employees table should sort by age DESC",
              "timedOut": null,
              "duration": 337,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').dblclick();\ncy.checkValuesSorted('Age', 'DESC');",
              "err": {},
              "uuid": "fd2d0c16-ae72-46c6-8ea5-06734a94ec0e",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary ASC",
              "fullTitle": "Employees table should sort by salary ASC",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').click();\ncy.checkValuesSorted('Salary', 'ASC');",
              "err": {},
              "uuid": "c54e6a3a-ce91-4140-900f-9e428105d9f0",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary DESC",
              "fullTitle": "Employees table should sort by salary DESC",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').dblclick();\ncy.checkValuesSorted('Salary', 'DESC');",
              "err": {},
              "uuid": "4f568483-ac08-4eb0-a823-f3ceada56698",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting ASC",
              "fullTitle": "Employees table should have proper values in rows after the sorting ASC",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').click();\ncy.compareRowValuesAfterSort('Airi Satou', ['Airi Satou', 'Accountant', 'Tokyo', '33', '$162,700']);",
              "err": {},
              "uuid": "1effd535-0d3f-48d2-b06a-2681ad5aa935",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting DESC",
              "fullTitle": "Employees table should have proper values in rows after the sorting DESC",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').dblclick();\ncy.compareRowValuesAfterSort('Zorita Serrano', ['Zorita Serrano', 'Software Engineer', 'San Francisco', '56', '$115,000']);",
              "err": {},
              "uuid": "f79128d4-e304-4255-bed4-458ff49e1188",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "row should have class active after click",
              "fullTitle": "Employees table row should have class active after click",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Airi Satou').parent().should('not.have.class', 'active');\ncy.contains('Airi Satou').click();\ncy.contains('Airi Satou').parent().should('have.class', 'active');",
              "err": {},
              "uuid": "c464c493-5468-4db0-b05e-695bf16b63e5",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to add a new employee",
              "fullTitle": "Employees table should be able to add a new employee",
              "timedOut": null,
              "duration": 1215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'success');\ncy.compareRowValuesAfterSort('Adam', ['Adam', 'QA Engineer', 'San Francisco', '18', '$50,000']);",
              "err": {},
              "uuid": "ffa44415-5642-41b1-b278-6bd638955167",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on name field\n   with invalid input",
              "fullTitle": "Employees table should have warning notification on name field\n   with invalid input",
              "timedOut": null,
              "duration": 1191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Ada', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Ada', 50000);",
              "err": {},
              "uuid": "db5c501a-82f2-4c03-8709-e147c49a0ce5",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on position \n  field with invalid input",
              "fullTitle": "Employees table should have warning notification on position \n  field with invalid input",
              "timedOut": null,
              "duration": 5338,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-qa=\"name\"]').type('Adam');\ncy.get('[data-qa=\"office\"]').select('San Francisco');\ncy.get('[data-qa=\"age\"]').type('18{enter}');\ncy.get('[data-qa=\"salary\"]').type('50000{enter}');\ncy.get('button').contains('Save to table').click();\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {
                "message": "CypressError: Timed out retrying: `cy.click()` failed because this element:\n\n`<button type=\"submit\">Save to...</button>`\n\nis being covered by another element:\n\n`<p>error</p>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying: `cy.click()` failed because this element:\n\n`<button type=\"submit\">Save to...</button>`\n\nis being covered by another element:\n\n`<p>error</p>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at $Cy.ensureDescendents (http://localhost:8080/__cypress/runner/cypress_runner.js:161307:26)\n    at ensureDescendents (http://localhost:8080/__cypress/runner/cypress_runner.js:149871:8)\n    at ensureDescendentsAndScroll (http://localhost:8080/__cypress/runner/cypress_runner.js:149878:14)\n    at ensureElIsNotCovered (http://localhost:8080/__cypress/runner/cypress_runner.js:150007:5)\n    at runAllChecks (http://localhost:8080/__cypress/runner/cypress_runner.js:150148:52)\n    at retryActionability (http://localhost:8080/__cypress/runner/cypress_runner.js:150163:16)\n    at tryCatcher (http://localhost:8080/__cypress/runner/cypress_runner.js:10325:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:8080/__cypress/runner/cypress_runner.js:7599:29)\n    at tryFn (http://localhost:8080/__cypress/runner/cypress_runner.js:165556:21)\n    at whenStable (http://localhost:8080/__cypress/runner/cypress_runner.js:165594:12)\n    at http://localhost:8080/__cypress/runner/cypress_runner.js:165089:16\n    at tryCatcher (http://localhost:8080/__cypress/runner/cypress_runner.js:10325:23)\n    at Promise._settlePromiseFromHandler (http://localhost:8080/__cypress/runner/cypress_runner.js:8260:31)\n    at Promise._settlePromise (http://localhost:8080/__cypress/runner/cypress_runner.js:8317:18)\n    at Promise._settlePromise0 (http://localhost:8080/__cypress/runner/cypress_runner.js:8362:10)\n    at Promise._settlePromises (http://localhost:8080/__cypress/runner/cypress_runner.js:8442:18)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsEmployeesTableDOM.spec.js:345:48)",
                "diff": null
              },
              "uuid": "f21544f7-b579-46a4-9011-9516326bc9ad",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age less than 18",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age less than 18",
              "timedOut": null,
              "duration": 1532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 17, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "1ae47193-8b21-4d99-8fd0-e90dbcd6a290",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age bigger than 90",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age bigger than 90",
              "timedOut": null,
              "duration": 1219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 91, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "9b6e28d1-dd14-4b84-a512-652ad6f42d85",
              "parentUUID": "253b60e1-95f0-401e-a296-bede9da948c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b27fa0c7-230e-4292-a032-40676c809e49",
            "b934e2d9-dd32-40bc-b393-27dd28acecde",
            "30532bec-4ccb-45c5-ae67-020056fd5fe0",
            "fd2d0c16-ae72-46c6-8ea5-06734a94ec0e",
            "c54e6a3a-ce91-4140-900f-9e428105d9f0",
            "4f568483-ac08-4eb0-a823-f3ceada56698",
            "1effd535-0d3f-48d2-b06a-2681ad5aa935",
            "f79128d4-e304-4255-bed4-458ff49e1188",
            "c464c493-5468-4db0-b05e-695bf16b63e5",
            "ffa44415-5642-41b1-b278-6bd638955167",
            "db5c501a-82f2-4c03-8709-e147c49a0ce5",
            "1ae47193-8b21-4d99-8fd0-e90dbcd6a290",
            "9b6e28d1-dd14-4b84-a512-652ad6f42d85"
          ],
          "failures": [
            "f21544f7-b579-46a4-9011-9516326bc9ad"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12928,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}