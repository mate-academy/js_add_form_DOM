{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","rows","children","sortTableASC","th","i","cellIndex","setAttribute","textContent","sort","a","b","convertToNumber","localeCompare","sortTableDESC","str","slice","split","join","addEventListener","e","header","target","closest","dataset","append","row","selectedRow","find","el","className","classList","remove","add","body","insertAdjacentHTML","form","preventDefault","data","FormData","newEmployee","Object","fromEntries","entries","name","length","pushNotification","age","position","salary","office","Number","toLocaleString","title","description","type","notification","setTimeout"],"mappings":"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","file":"main.e6c479ab.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = [...tbody.children];\n\n// table sorting implementation\n\nthead.addEventListener('click', e => {\n  const header = e.target.closest('th');\n\n  if (header.dataset.sort === 'asc') {\n    tbody.append(...sortTableDESC(header));\n  } else {\n    tbody.append(...sortTableASC(header));\n  }\n});\n\nfunction sortTableASC(th) {\n  const i = th.cellIndex;\n\n  th.setAttribute('data-sort', 'asc');\n\n  switch (th.textContent) {\n    case 'Salary':\n      return rows.sort((a, b) => convertToNumber(a.children[i].textContent)\n        - convertToNumber(b.children[i].textContent));\n    default:\n      return rows.sort((a, b) => a.children[i].textContent\n        .localeCompare(b.children[i].textContent));\n  }\n}\n\nfunction sortTableDESC(th) {\n  const i = th.cellIndex;\n\n  th.setAttribute('data-sort', 'desc');\n\n  switch (th.textContent) {\n    case 'Salary':\n      return rows.sort((a, b) => convertToNumber(b.children[i].textContent)\n        - convertToNumber(a.children[i].textContent));\n    default:\n      return rows.sort((a, b) => b.children[i].textContent\n        .localeCompare(a.children[i].textContent));\n  }\n}\n\nfunction convertToNumber(str) {\n  return +str.slice(1).split(',').join('');\n}\n\n// row selecting\ntbody.addEventListener('click', e => {\n  const row = e.target.closest('tr');\n  const selectedRow = rows.find(el => el.className === 'active');\n\n  if (selectedRow) {\n    selectedRow.classList.remove('active');\n  }\n\n  row.classList.add('active');\n});\n\n// form adding\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form class= \"new-employee-form\">\n    <label>Name: \n      <input \n        name=\"name\" \n        type=\"text\"\n        data-qa=\"name\"\n      >\n    </label>\n\n    <label>Position: \n      <input \n        name=\"position\" \n        type=\"text\"\n        data-qa=\"position\"\n      >\n    </label>\n\n    <label>Office: \n      <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\" selected>Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n\n    <label>Age: \n      <input \n        name=\"age\" \n        type=\"number\"\n        data-qa=\"age\"\n      >\n    </label>\n\n    <label>Salary: \n      <input \n        name=\"salary\" \n        type=\"number\"\n        data-qa=\"salary\"\n      >\n    </label>\n\n    <button type= \"submit\">\n      Save to table\n    </button>\n  </form>\n`);\n\n// add a new employee to the table\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const newEmployee = Object.fromEntries(data.entries());\n\n  if (newEmployee.name.length < 4) {\n    pushNotification('Error message',\n      'Name couldn\\'t be less than 4 letters.', 'error');\n\n    return;\n  }\n\n  if (newEmployee.age < 18 || newEmployee.age > 90) {\n    pushNotification('Error message',\n      'Age couldn\\'t be less than 18 or more than 90.', 'error');\n\n    return;\n  }\n\n  if (!newEmployee.position) {\n    pushNotification('Error message',\n      'Position should be indicated.', 'error');\n\n    return;\n  }\n\n  if (!newEmployee.salary) {\n    pushNotification('Error message',\n      'Salary should be indicated.', 'error');\n\n    return;\n  }\n\n  tbody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${newEmployee.name}</td>\n      <td>${newEmployee.position}</td>\n      <td>${newEmployee.office}</td>\n      <td>${newEmployee.age}</td>\n      <td>$${Number(newEmployee.salary).toLocaleString('en-US')}</td>\n    </tr>\n  `);\n\n  pushNotification('Success message',\n    'New employee was successfully added to the table.', 'success');\n});\n\n// notification\n\nconst pushNotification = (title, description, type) => {\n  const oldNotification = document.querySelector('.notification');\n  \n  oldNotification.remove();\n\n  document.body.insertAdjacentHTML('beforeend', `\n    <div data-qa=\"notification\" class=\"notification ${type}\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    </div>\n  `);\n\n  const notification = document.querySelector('.notification');\n\n  setTimeout(() => {\n    notification.remove();\n  }, '5000');\n};\n"]}